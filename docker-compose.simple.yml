services:
  # SQLite Database (file-based, no separate container needed)
  # Database file will be stored in ./data directory

  # FastAPI Backend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=sqlite+aiosqlite:///./data/threatforge.db
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-change-this-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-here-change-this-in-production}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-["http://localhost:3000", "http://localhost", "http://129.212.186.236"]}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-["localhost", "127.0.0.1", "129.212.186.236"]}
      - ENVIRONMENT=production
      - DEBUG=false
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY:-}
      - URLSCAN_API_KEY=${URLSCAN_API_KEY:-}
      - CROWDSTRIKE_CLIENT_ID=${CROWDSTRIKE_CLIENT_ID:-}
      - CROWDSTRIKE_CLIENT_SECRET=${CROWDSTRIKE_CLIENT_SECRET:-}
      - FLASHPOINT_API_KEY=${FLASHPOINT_API_KEY:-}
      - RECORDED_FUTURE_API_KEY=${RECORDED_FUTURE_API_KEY:-}
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./data:/app/data  # Mount data directory for SQLite files
    restart: unless-stopped

  # React Frontend (Nginx static)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "127.0.0.1:3000:80"
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.simple.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
      - frontend
    restart: unless-stopped

volumes:
  data:
